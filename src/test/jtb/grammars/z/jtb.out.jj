/* Generated by JTB 1.5.1 */

PARSER_BEGIN(NoOptionsSectionGrammar)
package grammars.z;

import grammars.z.syntaxtree.*;


public class NoOptionsSectionGrammar {

}

PARSER_END(NoOptionsSectionGrammar)

classDeclaration classDeclaration() :
{
  Token n0 = null;
  className n1 = null;
  Token n2 = null;
  NodeListOptional n3 = new NodeListOptional();
  NodeChoice n4 = null;
  method n5 = null;
  instruction n6 = null;
  Token n7 = null;
  Token n8 = null;
  Token n9 = null;
  classDeclaration jtbNode = null;
}
{
  n0 = "class"
  n1 = className()
  n2 = "{"
  (
    (
      LOOKAHEAD( 2 )
      n5 = method()
      { n4 = new NodeChoice(n5, 0, 2); }
    |
      n6 = instruction()
      { n4 = new NodeChoice(n6, 1, 2); }
    )
    { n3.addNode(n4); }
  )*
  { n3.nodes.trimToSize(); }
  n7 = "}"
  n8 = "."
    n9 = < EOF >
  { n9.beginColumn++; }
  { n9.endColumn++; }
  { jtbNode = new classDeclaration(n0, n1, n2, n3, n7, n8, n9); }
  { return jtbNode; }
}

className className() :
{
  Token n0 = null;
  className jtbNode = null;
}
{
  n0 = < ID >
  { jtbNode = new className(n0); }
  { return jtbNode; }
}

method method() :
{
  methodName n0 = null;
  Token n1 = null;
  NodeList n2 = new NodeList();
  instruction n3 = null;
  Token n4 = null;
  method jtbNode = null;
}
{
  n0 = methodName()
  n1 = "("
  (
    n3 = instruction()
    { n2.addNode(n3); }
  )+
  { n2.nodes.trimToSize(); }
  n4 = ")"
  { jtbNode = new method(n0, n1, n2, n4); }
  { return jtbNode; }
}

methodName methodName() :
{
  Token n0 = null;
  methodName jtbNode = null;
}
{
  n0 = < ID >
  { jtbNode = new methodName(n0); }
  { return jtbNode; }
}

instruction instruction() :
{
  Token n0 = null;
  Token n1 = null;
  instruction jtbNode = null;
}
{
  n0 = < ID >
  n1 = ";"
  { jtbNode = new instruction(n0, n1); }
  { return jtbNode; }
}

TOKEN :
{
  < ID : ( ["a"-"z", "A"-"Z", "0"-"9"] )+ >
}

SKIP :
{
  < WS : 
    (
      " "
    | "\t"
    | "\n"
    | "\r"
    ) >
}

