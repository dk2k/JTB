/* Generated by JTB 1.5.1 */
package examples.java.ex2jtb.hook;

import examples.java.ex2jtb.syntaxtree.*;

/**
 * An empty implementation of {@link IEnterExitHook}.
 */
@SuppressWarnings("unused")
public class EmptyEnterExitHook implements IEnterExitHook {
  /*
   * Enter methods
   */

  /** Called upon entering a {@link ASTStart} node. */
  @Override
  public void ASTStartEnter() {
    // to be filled if necessary
  }

  /** Called upon entering a {@link ASTExpression} node. */
  @Override
  public void ASTExpressionEnter() {
    // to be filled if necessary
  }

  /** Called upon entering a {@link ASTAdditiveExpression} node. */
  @Override
  public void ASTAdditiveExpressionEnter() {
    // to be filled if necessary
  }

  /** Called upon entering a {@link ASTMultiplicativeExpression} node. */
  @Override
  public void ASTMultiplicativeExpressionEnter() {
    // to be filled if necessary
  }

  /** Called upon entering a {@link ASTUnaryExpression} node. */
  @Override
  public void ASTUnaryExpressionEnter() {
    // to be filled if necessary
  }

  /** Called upon entering a {@link ASTMyID} node. */
  @Override
  public void ASTMyIDEnter() {
    // to be filled if necessary
  }

  /** Called upon entering a {@link ASTInteger} node. */
  @Override
  public void ASTIntegerEnter() {
    // to be filled if necessary
  }

  /*
   * Exit methods
   */

  /** Called upon exiting a {@link ASTStart} node. *
   * @param n - the node created
   */
  @Override
  public void ASTStartExit(final ASTStart n) {
    // to be filled if necessary
  }

  /** Called upon exiting a {@link ASTExpression} node. *
   * @param n - the node created
   */
  @Override
  public void ASTExpressionExit(final ASTExpression n) {
    // to be filled if necessary
  }

  /** Called upon exiting a {@link ASTAdditiveExpression} node. *
   * @param n - the node created
   */
  @Override
  public void ASTAdditiveExpressionExit(final ASTAdditiveExpression n) {
    // to be filled if necessary
  }

  /** Called upon exiting a {@link ASTMultiplicativeExpression} node. *
   * @param n - the node created
   */
  @Override
  public void ASTMultiplicativeExpressionExit(final ASTMultiplicativeExpression n) {
    // to be filled if necessary
  }

  /** Called upon exiting a {@link ASTUnaryExpression} node. *
   * @param n - the node created
   */
  @Override
  public void ASTUnaryExpressionExit(final ASTUnaryExpression n) {
    // to be filled if necessary
  }

  /** Called upon exiting a {@link ASTMyID} node. *
   * @param n - the node created
   */
  @Override
  public void ASTMyIDExit(final ASTMyID n) {
    // to be filled if necessary
  }

  /** Called upon exiting a {@link ASTInteger} node. *
   * @param n - the node created
   */
  @Override
  public void ASTIntegerExit(final ASTInteger n) {
    // to be filled if necessary
  }

}
