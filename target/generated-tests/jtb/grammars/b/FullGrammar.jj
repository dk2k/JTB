/* Generated by JTB 1.5.1 */
options
{
  STATIC = false;
  OUTPUT_DIRECTORY = "../../../../../target/generated-tests/jj/grammars/b";
  // JTB_O = "../../../../../target/generated-tests/jtb/grammars/b/FullGrammar.jj";
  // JTB_D = "../../../../../target/generated-tests/jtb/grammars/b";
  // JTB_P = "grammars.b";
  // JTB_IA = true;
  // JTB_JD = true;
  // JTB_NOPLG = true;
}

PARSER_BEGIN(FullGrammar)
package grammars.b;

import grammars.b.visitor.*;
import java.util.ArrayList;
import java.util.List;
import grammars.b.syntaxtree.*;


public class FullGrammar {


  /** Return variable for the {@link #jcp_ui$} JavaCodeProduction) */
  int jtbrt_jcp_ui$;

  /** Return variable for the {@link #jcp_s$} JavaCodeProduction) */
  String jtbrt_jcp_s$;

  /** Return variable for the {@link #jcp_ubar$} JavaCodeProduction) */
  boolean[] jtbrt_jcp_ubar$;

  /** Return variable for the {@link #bp_i} BNFProduction) */
  int jtbrt_bp_i;

  /** Return variable for the {@link #bp_ui} BNFProduction) */
  int jtbrt_bp_ui;

  /** Return variable for the {@link #bp_s} BNFProduction) */
  String jtbrt_bp_s;

  /** Return variable for the {@link #bp_tcf_ie_w} BNFProduction) */
  String jtbrt_bp_tcf_ie_w;

  /** Return variable for the {@link #bp_sa} BNFProduction) */
  String[] jtbrt_bp_sa;

  /** Return variable for the {@link #bp_s1} BNFProduction) */
  String jtbrt_bp_s1;

  /** Return variable for the {@link #bp_s2} BNFProduction) */
  String jtbrt_bp_s2;

  /** Return variable for the {@link #bp_s3} BNFProduction) */
  String jtbrt_bp_s3;

  /** Return variable for the {@link #bp_c} BNFProduction) */
  char jtbrt_bp_c;

  /** Return variable for the {@link #bp_ca} BNFProduction) */
  char[] jtbrt_bp_ca;

  /** Return variable for the {@link #bp_h} BNFProduction) */
  short jtbrt_bp_h;

  /** Return variable for the {@link #bp_haa} BNFProduction) */
  short[][] jtbrt_bp_haa;

  /** Return variable for the {@link #bp_l} BNFProduction) */
  long jtbrt_bp_l;

  /** Return variable for the {@link #bp_d} BNFProduction) */
  double jtbrt_bp_d;

  /** Return variable for the {@link #bp_da} BNFProduction) */
  double[] jtbrt_bp_da;

  /** Return variable for the {@link #bp_f} BNFProduction) */
  float jtbrt_bp_f;

  /** Return variable for the {@link #bp_jual} BNFProduction) */
  java.util.ArrayList<Float> jtbrt_bp_jual;

  /** Return variable for the {@link #bp_hm} BNFProduction) */
  java.util.HashMap<String, Float> jtbrt_bp_hm;

  /** Return variable for the {@link #bp_tu_a} BNFProduction) */
  Tuple<? extends java.lang.CharSequence, ? super CharSequence, ?> jtbrt_bp_tu_a;

  /** Return variable for the {@link #bp_class1} BNFProduction) */
  FGclass1 jtbrt_bp_class1;

  /** Return variable for the {@link #check_proper_formatting} BNFProduction) */
  int jtbrt_check_proper_formatting;

  /** Return variable for the {@link #f0_eu1_b2} BNFProduction) */
  String jtbrt_f0_eu1_b2;

  /** Return variable for the {@link #f0_eu1_peias2} BNFProduction) */
  String jtbrt_f0_eu1_peias2;

  /** Return variable for the {@link #f0_eu1_pejc2} BNFProduction) */
  String jtbrt_f0_eu1_pejc2;

  public static void main(String args[]) {
    System.err.println("FullGrammar Reading...");
    FullGrammar fg = new FullGrammar(System.in);
    try {
      System.err.println("... Parsing...");
      Start st = fg.Start();
      DepthFirstVoidVisitor v = new DepthFirstVoidVisitor();
      System.err.println("... Visiting...");
      st.accept(v);
      System.err.println("... FullGrammar ended.");
      System.exit(0);
    }
    catch (final Exception e) {
      System.err.println("Oops!");
      System.err.println(e.getMessage());
      e.printStackTrace();
      System.exit(-1);
    }
  }

  private void info(final String aMsg) {
    String tk0 = getToken(0).toString();
    String tk1 = getToken(1).toString();
    String ct0 = tk0 == null ? "!null!" : tk0.length() == 0 ? "!empty!" : tk0;
    String ct1 = tk1 == null ? "!null!" : tk1.length() == 0 ? "!empty!" : tk1;
    System.err.println(aMsg + ", current token = " + ct0 + ", next token = " + ct1);
  }

  int global_i, global_j;

  boolean some_lookahead() {
    return true;
  }

  void some_lexical_action() {
    return;
  }
}


class Tuple <F, S, T> implements ITuple<F , S, T> , IL {
  public F first, first2;

  private S second;

  protected T third;

  Tuple<Float , String, ? extends Thread> myTupleQ;

  protected java.util.List<? extends Boolean>[][] list = new ArrayList[1][1];

  public void setValues(F first, S second, T third) {
    this.first = this.first2 = first;
    this.second = second;
    this.third = third;
  }

  @Override public F getFirst() {
    return this.first;
  }

  @Override public S getSecond() {
    return this.second;
  }

  public T getThird() {
    return this.third;
  }

  @Override public boolean get1stElem(java.util.List<? extends Boolean> list) {
    this.list[0][0] = list;
    return list.get(0);
  }

  Tuple()  {
    first = first2 = null;
    second = null;
    third = null;
    list = new ArrayList[1][1];
  }

  Tuple(F f, S s, T t)  {
    first = first2 = null;
    second = s;
    third = t;
    list = new ArrayList[1][1];
  }

  Tuple<F , S, T> getNewInstance() {
    return new Tuple<F , S, T>();
  }
}


interface IL {
  boolean get1stElem(java.util.List<? extends Boolean> list) ;
}


interface IF <F> {
  public F getFirst() ;
}


interface IS <S> {
  abstract S getSecond() ;
}


interface ITuple <F, S, T> extends IF , IS {
  static <A extends Boolean & ITuple> boolean getAll(A a) {
    return true && a;
  }
}


final class Pizza {
  private PizzaStatus status;

  interface PSO {
    public boolean isOrdered() ;
  }


  interface PSR {
    public boolean isReady() ;
  }


  protected enum PizzaStatus implements PSO , PSR {
    ORDERED(5){
      @Override public boolean isOrdered() {
        return true;
      }
    }
, READY(2){
      @Override public boolean isReady() {
        return true;
      }
    }
, DELIVERED(0){
      @Override public boolean isDelivered() {
        return true;
      }
    }
, ;
    private int timeToDelivery;public boolean isOrdered() {
      return false;
    }public boolean isReady() {
      return false;
    }public boolean isDelivered() {
      return false;
    }public int getTimeToDelivery() {
      return timeToDelivery;
    }PizzaStatus(int timeToDelivery)  {
      this.timeToDelivery = timeToDelivery;
    }
  }

  public boolean isDeliverable() {
    return this.status.isReady();
  }
}


class FGclass1 {}


class FGclass2 {}

PARSER_END(FullGrammar)

JAVACODE void jcp_v()
{}

JAVACODE jcp_v$ jcp_v$() /*%*/ 
{
  /* return; statement commented out by JTB */
  return new jcp_v$();
}

JAVACODE private void jcp_iv(int[] i) throws IllegalStateException
{
  throw new IllegalStateException("dummy ise");
}

JAVACODE private jcp_iv$ jcp_iv$(final int i) throws IllegalStateException /*%*/ 
{
  if (i == 0) {
    throw new IllegalStateException("dummy ise");
  }
  return new jcp_iv$();
}

JAVACODE public int jcp_ui(final int i, boolean b) throws IllegalStateException, NullPointerException
{
  if (i == 0) {
    if (b)
      throw new IllegalStateException((String)null);
    else
      throw new NullPointerException();
  }
  return i - 1;
}

JAVACODE public jcp_ui$ jcp_ui$(final int i, boolean b) throws IllegalStateException, NullPointerException /*%*/ 
{
  if (i == 0) {
    if (b)
      throw new IllegalStateException("with parameter");
    else
      throw new NullPointerException();
  }jtbrt_jcp_ui$ = i;
  return new jcp_ui$();
}

JAVACODE protected String jcp_s(String s)
{
  return s;
}

JAVACODE protected String[] jcp_sa(String[] sa)
{
  return sa;
}

JAVACODE protected jcp_s$ jcp_s$(String s) /*%*/ 
{
  jtbrt_jcp_s$ = s + "added for expression";
  return new jcp_s$();
}

JAVACODE public boolean[] jcp_ubar()
{
  return new boolean[1];
}

JAVACODE public jcp_ubar$ jcp_ubar$() /*%*/ 
{
  jtbrt_jcp_ubar$ = new boolean[1];
  return new jcp_ubar$();
}

JAVACODE void jcp_sts() throws Exception
{
  int k = 0;
  try {
    if (k == 1)
      throw new Exception();
  }
  catch (Exception ex) {
    k = 1;
  }
  try {
    if (k != 1)
      throw new Exception();
  }
  finally {
    k = 2;
  }
  try {
    k = 3;
    if (k == 0)
      return;
  }
  catch (Exception ex) {
    k = 4;
  }
  finally {
    k = 5;
  }
  return;
}

TOKEN [IGNORE_CASE] :
{
  < A_BS_B : "a\bb" >
| < ES : "\u00e9\u00e8\u00ea" >
| < #SYN_ESC : "\u0016\u001b" >
| < #ES_OR_SYN_ESC :
      <ES>
    | <SYN_ESC>
>
| < abID : ( ["a"-"b", "A"-"B"] )( ["a"-"z", "A"-"Z", "0"-"9"] )* >
| < cdID$ : ( ["c"-"d", "C"-"D"] )( ["a"-"z", "A"-"Z", "0"-"9"] )* > /*!*/
| < efID : ( ["e"-"f"] )( ["A"-"Z", "0"-"9"] )* >
| < ID : ( ["a"-"z", "A"-"Z"] )( ["a"-"z", "A"-"Z", "0"-"9"] )* >
| < NUM_2$ : ( ["0"-"9"] ){2} > /*!*/
| < NUM_3_9 : ( ["0"-"9"] ){3, 9} >
| "%ctbu?no"
| < NOT_BUILT : "%notbuilt?" > /*!*/
}

TOKEN :
{
  "%ctbu?yes"
}

<DEFAULT>
SPECIAL_TOKEN :
{
  < SINGLE_LINE_COMMENT : "//"( ~["\n", "\r"] )*
    (
      "\n"
    | "\r"
    | "\r\n"
    ) >
}

<*>
SKIP :
{
  < WS : 
    (
      " "
    | "\t"
    | "\n"
    | "\r"
    ) >
}

MORE :
{
  "\""
    {
      stringSize = 0;
    } : WithinString
}

<WithinString>
TOKEN :
{
  < STRLIT : "\"" >
    {
      System.err.println("Size = " + stringSize);
    } : DEFAULT
}

<WithinString>
MORE :
{
  < ~["\n", "\r"] >
    {
      stringSize++;
    }
}

TOKEN_MGR_DECLS : {

  int stringSize;
}


Start Start() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  NodeSequence n2 = null;
  bp_v n3 = null;
  bp_v_ n4 = null;
  bp_w n5 = null;
  bp_w_ n6 = null;
  bp_x n7 = null;
  bp_x_ n8 = null;
  bp_x__ n9 = null;
  bp_y n10 = null;
  bp_y_ n11 = null;
  bp_z_ n12 = null;
  bp_z__ n13 = null;
  bp_v_o n14 = null;
  bp_v_o n15 = null;
  bp_ui n16 = null;
  bp_s n17 = null;
  bp_sa n18 = null;
  bp_v1 n19 = null;
  bp_v2 n20 = null;
  bp_v3 n21 = null;
  bp_s1 n22 = null;
  bp_s2 n23 = null;
  bp_s3 n24 = null;
  bp_c n25 = null;
  bp_ca n26 = null;
  bp_h n27 = null;
  bp_haa n28 = null;
  bp_l n29 = null;
  bp_d n30 = null;
  bp_da n31 = null;
  bp_f n32 = null;
  bp_jual n33 = null;
  bp_hm n34 = null;
  Token n35 = null;
  NodeSequence n36 = null;
  Token n37 = null;
  bp_tu_a n38 = null;
  bp_acc n39 = null;
  bp_DoubleThrows n40 = null;
  bp_DoubleThrows n41 = null;
  jcp_DoubleThrows n42 = null;
  jcp_DoubleThrows n43 = null;
  skipButBuild n44 = null;
  Token n45 = null;
  NodeSequence n46 = null;
  Token n47 = null;
  expch_a n48 = null;
  expch_b n49 = null;
  expch_c n50 = null;
  expch_c n51 = null;
  expch_c n52 = null;
  expch_c n53 = null;
  expch_c n54 = null;
  expch_c n55 = null;
  NodeSequence n56 = null;
  Token n57 = null;
  expch_em_lxac n58 = null;
  expch_em_lxac n59 = null;
  expch_em_lxac n60 = null;
  expch_em_lxac n61 = null;
  expch_wnsn n62 = null;
  expch_wnsn n63 = null;
  expch_2ch n64 = null;
  Start jtbNode = null;
  java.util.ArrayList<Float> jual = new java.util.ArrayList<Float>();
  for (int i = 0; i < 10; i++)
    jual.add(Float.valueOf(i));
  
}
{
  (
    {
      info("before 1st choice");
    }
        n1 = < EOF >
    { n1.beginColumn++; }
    { n1.endColumn++; }
    { n0 = new NodeChoice(n1, 0, 5); }
    {
      info("after 1st EOF");
    }
  |
    {
      info("before 2nd choice");
    }
    { n2 = new NodeSequence(33); }
    n3 = bp_v()
    { n2.addNode(n3); }
    {
      info("passed bp_v()");
    }
    bp_v$()
    {
      info("passed bp_v$()");
    }
    n4 = bp_v_()
    { n2.addNode(n4); }
    {
      info("passed bp_v_()");
    }
    n5 = bp_w()
    { n2.addNode(n5); }
    {
      info("passed bp_w()");
    }
    n6 = bp_w_()
    { n2.addNode(n6); }
    {
      info("passed bp_w_()");
    }
    n7 = bp_x()
    { n2.addNode(n7); }
    {
      info("passed bp_x()");
    }
    n8 = bp_x_()
    { n2.addNode(n8); }
    {
      info("passed bp_x_()");
    }
    n9 = bp_x__()
    { n2.addNode(n9); }
    {
      info("passed bp_x__()");
    }
    n10 = bp_y()
    { n2.addNode(n10); }
    {
      info("passed bp_y()");
    }
    n11 = bp_y_()
    { n2.addNode(n11); }
    {
      info("passed bp_y_()");
    }
    n12 = bp_z_()
    { n2.addNode(n12); }
    {
      info("passed bp_z_()");
    }
    n13 = bp_z__()
    { n2.addNode(n13); }
    {
      info("passed bp_z__()");
    }
    n14 = bp_v_o()
    { n2.addNode(n14); }
    {
      info("passed bp_v_o() 1");
    }
    n15 = bp_v_o()
    { n2.addNode(n15); }
    {
      info("passed bp_v_o() 2");
    }
    n16 = bp_ui(21, true)
    { n2.addNode(n16); }
    {
      info("bp_ui(21, true)");
    }
    bp_ui$(22, false)
    {
      info("passed bp_ui$(22, false)");
    }
    n17 = bp_s()
    { n2.addNode(n17); }
    {
      info("passed bp_s()");
    }
    bp_s$()
    {
      info("passed bp_s$()");
    }
    n18 = bp_sa()
    { n2.addNode(n18); }
    {
      info("passed bp_s()");
    }
    n19 = bp_v1()
    { n2.addNode(n19); }
    {
      info("passed bp_v1()");
    }
    n20 = bp_v2()
    { n2.addNode(n20); }
    {
      info("passed bp_v2()");
    }
    n21 = bp_v3()
    { n2.addNode(n21); }
    {
      info("passed bp_v3()");
    }
    n22 = bp_s1()
    { n2.addNode(n22); }
    {
      info("passed bp_s1()");
    }
    n23 = bp_s2()
    { n2.addNode(n23); }
    {
      info("passed bp_s2()");
    }
    n24 = bp_s3()
    { n2.addNode(n24); }
    {
      info("passed bp_s3()");
    }
    n25 = bp_c()
    { n2.addNode(n25); }
    {
      info("passed bp_c()");
    }
    n26 = bp_ca()
    { n2.addNode(n26); }
    {
      info("passed bp_ca()");
    }
    n27 = bp_h()
    { n2.addNode(n27); }
    {
      info("passed bp_h()");
    }
    n28 = bp_haa()
    { n2.addNode(n28); }
    {
      info("passed bp_haa()");
    }
    n29 = bp_l()
    { n2.addNode(n29); }
    {
      info("passed bp_l()");
    }
    bp_laa$()
    {
      info("passed bp_laa$()");
    }
    n30 = bp_d()
    { n2.addNode(n30); }
    {
      info("passed bp_d()");
    }
    n31 = bp_da()
    { n2.addNode(n31); }
    {
      info("passed bp_da()");
    }
    n32 = bp_f()
    { n2.addNode(n32); }
    {
      info("passed bp_s()");
    }
    bp_fa$()
    {
      info("passed bp_fa$()");
    }
    bp_al$()
    {
      info("passed bp_al$()");
    }
    n33 = bp_jual()
    { n2.addNode(n33); }
    {
      info("passed bp_jual()");
    }
    n34 = bp_hm(jual)
    { n2.addNode(n34); }
    {
      info("passed bp_hm(jual)");
    }
        n35 = < EOF >
    { n35.beginColumn++; }
    { n35.endColumn++; }
    { n2.addNode(n35); }
    { n0 = new NodeChoice(n2, 1, 5); }
    {
      info("after 2nd EOF");
    }
  |
    {
      info("before 3rd choice");
    }
    { n36 = new NodeSequence(9); }
    n37 = ";"
    { n36.addNode(n37); }
    {
      info("passed ;");
    }
    n38 = bp_tu_a()
    { n36.addNode(n38); }
    {
      info("passed bp_tu_a()");
    }
    n39 = bp_acc()
    { n36.addNode(n39); }
    {
      info("passed bp_acc()");
    }
    n40 = bp_DoubleThrows(1)
    { n36.addNode(n40); }
    {
      info("passed bp_DoubleThrows(1)");
    }
    try {
      n41 = bp_DoubleThrows(0)
      {
        info("passed bp_DoubleThrows(0)");
      }
    }
    catch (IllegalStateException ise) {
      {
        info("caught IDE in bp_DoubleThrows(0)");
      }
    }
    { n36.addNode(n41); }
    n42 = jcp_DoubleThrows(1)
    { n36.addNode(n42); }
    {
      info("passed jcp_DoubleThrows(1)");
    }
    try {
      n43 = jcp_DoubleThrows(0)
      {
        info("passed jcp_DoubleThrows(0)");
      }
    }
    catch (IllegalStateException ise) {
      {
        info("caught IDE in jcp_DoubleThrows(0)");
      }
    }
    { n36.addNode(n43); }
    n44 = skipButBuild()
    { n36.addNode(n44); }
    {
      info("passed skipButBuild()");
    }
    eatNextToken()
    {
      info("passed eatNextToken()");
    }
        n45 = < EOF >
    { n45.beginColumn++; }
    { n45.endColumn++; }
    { n36.addNode(n45); }
    { n0 = new NodeChoice(n36, 2, 5); }
    {
      info("after 3rd EOF");
    }
  |
    {
      info("before 4th choice");
    }
    { n46 = new NodeSequence(9); }
    n47 = ","
    { n46.addNode(n47); }
    {
      info("passed ,");
    }
    n48 = expch_a()
    { n46.addNode(n48); }
    {
      info("passed expch_a()");
    }
    n49 = expch_b()
    { n46.addNode(n49); }
    {
      info("passed expch_b()");
    }
    n50 = expch_c(-1, 9)
    { n46.addNode(n50); }
    {
      info("passed expch_c(-1, 9)");
    }
    n51 = expch_c(0, 9)
    { n46.addNode(n51); }
    {
      info("passed expch_c(0, 9)");
    }
    n52 = expch_c(1, 8)
    { n46.addNode(n52); }
    {
      info("passed expch_c(1, 8)");
    }
    n53 = expch_c(1, 2)
    { n46.addNode(n53); }
    {
      info("passed expch_c(1, 2)");
    }
    n54 = expch_c(1, 3)
    { n46.addNode(n54); }
    {
      info("passed expch_c(1, 3)");
    }
    n55 = expch_c(-2, 9)
    { n46.addNode(n55); }
    {
      info("passed expch_c(-2, 9)");
    }
    { n0 = new NodeChoice(n46, 3, 5); }
    {
      info("after 4th choice");
    }
  |
    {
      info("before 5th choice");
    }
    { n56 = new NodeSequence(8); }
    n57 = "."
    { n56.addNode(n57); }
    {
      info("passed .");
    }
    n58 = expch_em_lxac()
    { n56.addNode(n58); }
    {
      info("passed expch_em_lxac(1)");
    }
    n59 = expch_em_lxac()
    { n56.addNode(n59); }
    {
      info("passed expch_em_lxac(2)");
    }
    n60 = expch_em_lxac()
    { n56.addNode(n60); }
    {
      info("passed expch_em_lxac(3)");
    }
    n61 = expch_em_lxac()
    { n56.addNode(n61); }
    {
      info("passed expch_em_lxac(4)");
    }
    expch_wosn_a()
    {
      info("passed expch_wosn_a(1)");
    }
    expch_wosn_a()
    {
      info("passed expch_wosn_a(2)");
    }
    expch_wosn_b()
    {
      info("passed expch_wosn_b(1)");
    }
    expch_wosn_b()
    {
      info("passed expch_wosn_b(2)");
    }
    n62 = expch_wnsn()
    { n56.addNode(n62); }
    {
      info("passed expch_wnsn(1)");
    }
    n63 = expch_wnsn()
    { n56.addNode(n63); }
    {
      info("passed expch_wnsn(2)");
    }
    n64 = expch_2ch()
    { n56.addNode(n64); }
    {
      info("passed expch_2ch()");
    }
    { n0 = new NodeChoice(n56, 4, 5); }
    {
      info("after 5th choice");
    }
  )
  { jtbNode = new Start(n0); }
  { return jtbNode; }
}

bp_v bp_v() :
{
  Token n0 = null;
  bp_v jtbNode = null;
}
{
  n0 = < ID >
  { jtbNode = new bp_v(n0); }
  { return jtbNode; }
}

void bp_v$ () /*!*/ :
{}
{
  < ID >
}

bp_v_ bp_v_() :
{
  bp_v_ jtbNode = null;
}
{
  (
    < ID >
  )
  { jtbNode = new bp_v_(); }
  { return jtbNode; }
}

bp_w bp_w() :
{
  bp_w jtbNode = null;
}
{
  (
    < NUM_2$ >
  )
  { jtbNode = new bp_w(); }
  { return jtbNode; }
}

bp_w_ bp_w_() :
{
  bp_w_ jtbNode = null;
}
{
  (
    < NUM_2$ >
  )
  { jtbNode = new bp_w_(); }
  { return jtbNode; }
}

bp_x bp_x() :
{
  bp_v n0 = null;
  bp_x jtbNode = null;
}
{
  n0 = bp_v()
  { jtbNode = new bp_x(n0); }
  { return jtbNode; }
}

bp_x_ bp_x_() :
{
  bp_x_ jtbNode = null;
}
{
  (
    bp_v()
  )
  { jtbNode = new bp_x_(); }
  { return jtbNode; }
}

bp_x__ bp_x__() :
{
  bp_x__ jtbNode = null;
}
{
  (
    bp_v$()
    bp_v$()
    (
bp_v$() /*!*/     )
  )
  { jtbNode = new bp_x__(); }
  { return jtbNode; }
}

bp_y bp_y() :
{
  Token n0 = null;
  Token n1 = null;
  bp_y jtbNode = null;
}
{
  n0 = < Y : ":y" >
  n1 = ":"
  { jtbNode = new bp_y(n0, n1); }
  { return jtbNode; }
}

bp_y_ bp_y_() :
{
  Token n0 = null;
  bp_y_ jtbNode = null;
}
{
  n0 = "!"
  < "y!" >
  { jtbNode = new bp_y_(n0); }
  { return jtbNode; }
}

bp_z_ bp_z_() :
{
  bp_z_ jtbNode = null;
}
{
  (
    bp_y()
  )
  { jtbNode = new bp_z_(); }
  { return jtbNode; }
}

bp_z__ bp_z__() :
{
  bp_y_ n0 = null;
  bp_z__ jtbNode = null;
}
{
  n0 = bp_y_()
  { jtbNode = new bp_z__(n0); }
  { return jtbNode; }
}

bp_v_o bp_v_o() :
{
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Token n4 = null;
  Token n5 = null;
  NodeSequence n6 = null;
  Token n7 = null;
  Token n8 = null;
  NodeChoice n9 = null;
  NodeSequence n10 = null;
  NodeChoice n11 = null;
  Token n12 = null;
  Token n13 = null;
  Token n14 = null;
  NodeSequence n15 = null;
  Token n16 = null;
  Token n17 = null;
  bp_v_o jtbNode = null;
}
{
  (
    (
      LOOKAHEAD( 2 )
      { n1 = new NodeSequence(3); }
      (
        (
          n3 = "_foo"
          { n2 = new NodeChoice(n3, 0, 2); }
        |
          {}
          { n2 = new NodeChoice(null, 1, 2); }
        )
      )
      { n1.addNode(n2); }
      n4 = "_bar"
      { n1.addNode(n4); }
      n5 = < ID >
      { n1.addNode(n5); }
      {
        info("- A1");
      }
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      { n6 = new NodeSequence(2); }
      n7 = "_bar"
      { n6.addNode(n7); }
      n8 = "_bar"
      { n6.addNode(n8); }
      {
        info("- A2");
      }
      { n0 = new NodeChoice(n6, 1, 2); }
    )
  )
  (
    (
      LOOKAHEAD( 2 )
      { n10 = new NodeSequence(3); }
      (
        (
          {}
          { n11 = new NodeChoice(null, 0, 2); }
        |
          n12 = "_foo"
          { n11 = new NodeChoice(n12, 1, 2); }
        )
      )
      { n10.addNode(n11); }
      n13 = "_bar"
      { n10.addNode(n13); }
      n14 = < ID >
      { n10.addNode(n14); }
      {
        info("- B1");
      }
      { n9 = new NodeChoice(n10, 0, 2); }
    |
      { n15 = new NodeSequence(2); }
      n16 = "_bar"
      { n15.addNode(n16); }
      n17 = "_bar"
      { n15.addNode(n17); }
      {
        info("- B2");
      }
      { n9 = new NodeChoice(n15, 1, 2); }
    )
  )
  {
    info("- C");
  }
  { jtbNode = new bp_v_o(n0, n9); }
  { return jtbNode; }
}

bp_i bp_i() :
{
  Token n0 = null;
  bp_i jtbNode = null;
  Token tk = null;
}
{
  n0 = < ID >
  { tk = n0; }
  {
    jtbrt_bp_i = tk.image.length();
  }
  { jtbNode = new bp_i(n0); }
  { return jtbNode; }
}

bp_i2 bp_i2() :
{
  bp_i n0 = null;
  bp_i2 jtbNode = null;
  int i = 0;
}
{
  { int oldJtbrt_bp_i_1 = jtbrt_bp_i; }
  n0 = bp_i()
  { i = jtbrt_bp_i; }
  { jtbrt_bp_i = oldJtbrt_bp_i_1; }
  { jtbNode = new bp_i2(n0); }
  { return jtbNode; }
}

public bp_ui bp_ui(final int i, boolean b) throws IllegalStateException, NullPointerException :
{
  Token n0 = null;
  bp_ui jtbNode = null;
  int j;
}
{
  n0 = < ID >
  { j = n0.kind; }
  {
    if (i == 0) {
      if (b)
        throw new IllegalStateException("with parameter");
      else
        throw new NullPointerException();
    }
    jtbrt_bp_ui = i;
  }
  { jtbNode = new bp_ui(n0); }
  { return jtbNode; }
}

public int bp_ui$ (final int i, boolean b) throws IllegalStateException, NullPointerException /*!*/ :
{}
{
  < ID > {
    if (i == 0) {
      if (b)
        throw new IllegalStateException((String)null);
      else
        throw new NullPointerException();
    }
    return i - 1;
  }
}

protected bp_s bp_s() :
{
  Token n0 = null;
  bp_s jtbNode = null;
  Token tk;
}
{
  n0 = < ID >
  { tk = n0; }
  { jtbNode = new bp_s(n0); }
  {
    jtbrt_bp_s = tk.image;
  }
  { return jtbNode; }
}

protected bp_tcf_ie_w bp_tcf_ie_w() :
{
  Token n0 = null;
  bp_tcf_ie_w jtbNode = null;
  Token tk;
}
{
  n0 = < ID >
  { tk = n0; }
  { jtbNode = new bp_tcf_ie_w(n0); }
  {
    int k = 0;
    try {
      if (k == 1)
        throw new Exception();
      if (k == 1) {
        throw new Exception();
      }
      while (k > 9) {
        k--;
      } 
    }
    catch (Exception ex) {
      k = 1;
    }
    try {
      if (k != 1)
        k = 1;
    }
    finally {
      k = 2;
    }
    try {
      k = 3;
      if (k == 0)
        jtbrt_bp_tcf_ie_w = tk.image;
      else
        if (k == 1) {
          jtbrt_bp_tcf_ie_w = tk.image;
        } else {
          jtbrt_bp_tcf_ie_w = null;
        }
    }
    catch (Exception ex) {
      k = 4;
    }
    finally {
      k = 5;
    }
    jtbrt_bp_tcf_ie_w = tk.image;
  }
  { return jtbNode; }
}

protected java.lang.String bp_s$ () /*!*/ :
{
  Token tk;
}
{
  tk = < ID > {
    return tk.image;
  }
}

protected bp_sa bp_sa() :
{
  Token n0 = null;
  bp_sa jtbNode = null;
  Token tk;
}
{
  n0 = < ID >
  { tk = n0; }
  { jtbNode = new bp_sa(n0); }
  {
    jtbrt_bp_sa = new String[]{ tk.image,null };
  }
  { return jtbNode; }
}

bp_v1 bp_v1() :
{
  bp_v n0 = null;
  bp_v1 jtbNode = null;
  Token t = null;
}
{
  n0 = bp_v()
  {
    /* return; statement commented out by JTB */
  }
  { jtbNode = new bp_v1(n0); }
  { return jtbNode; }
}

bp_v2 bp_v2() :
{
  bp_v2 jtbNode = null;
  Token t = null;
}
{
  (
    bp_v$()
    {
      /* return; statement commented out by JTB */
    }
  )
  { jtbNode = new bp_v2(); }
  { return jtbNode; }
}

bp_v3 bp_v3() :
{
  bp_v n0 = null;
  bp_v3 jtbNode = null;
  Token t1 = null, t2 = null;
}
{
  n0 = bp_v()
  bp_v$()
  {
    /* return; statement commented out by JTB */
  }
  { jtbNode = new bp_v3(n0); }
  { return jtbNode; }
}

bp_s1 bp_s1() :
{
  bp_s n0 = null;
  bp_s1 jtbNode = null;
  String s = null;
}
{
  { String oldJtbrt_bp_s_1 = jtbrt_bp_s; }
  n0 = bp_s()
  { s = jtbrt_bp_s; }
  { jtbrt_bp_s = oldJtbrt_bp_s_1; }
  { jtbNode = new bp_s1(n0); }
  {
    jtbrt_bp_s1 = s;
  }
  { return jtbNode; }
}

bp_s2 bp_s2() :
{
  bp_s2 jtbNode = null;
  java.lang.String s = null;
}
{
  (
    s=bp_s$()
    { jtbNode = new bp_s2(); }
    {
      jtbrt_bp_s2 = s;
    }
  )
  { return jtbNode; }
}

bp_s3 bp_s3() :
{
  bp_s n0 = null;
  bp_s3 jtbNode = null;
  String s1 = null, s2 = null;
}
{
  { String oldJtbrt_bp_s_1 = jtbrt_bp_s; }
  n0 = bp_s()
  { s1 = jtbrt_bp_s; }
  { jtbrt_bp_s = oldJtbrt_bp_s_1; }
  s2=bp_s$()
  { jtbNode = new bp_s3(n0); }
  {
    jtbrt_bp_s3 = s1 + s2;
  }
  { return jtbNode; }
}

bp_c bp_c() :
{
  bp_c jtbNode = null;
}
{
  (
    < cdID$ >
    {
      jtbrt_bp_c = '0';
    }
  )
  { jtbNode = new bp_c(); }
  { return jtbNode; }
}

bp_ca bp_ca() :
{
  bp_ca jtbNode = null;
}
{
  (
    < cdID$ >
    { jtbNode = new bp_ca(); }
    {
      jtbrt_bp_ca = new char[]{ '0','1' };
    }
  )
  { return jtbNode; }
}

bp_h bp_h() :
{
  NodeSequence n0 = null;
  Token n1 = null;
  bp_h jtbNode = null;
}
{
  (
        { n0 = new NodeSequence(1); }
    n1 = < ID >
    { n0.addNode(n1); }

  )
  {
    jtbrt_bp_h = 0;
  }
  { jtbNode = new bp_h(n0); }
  { return jtbNode; }
}

bp_haa bp_haa() :
{
  Token n0 = null;
  bp_haa jtbNode = null;
}
{
  n0 = < ID >
  { jtbNode = new bp_haa(n0); }
  {
    jtbrt_bp_haa = new short[][]{ { 0,1 },{ -2,+3 } };
  }
  { return jtbNode; }
}

bp_l bp_l() :
{
  Token n0 = null;
  bp_l jtbNode = null;
}
{
  n0 = < ID >
  {
    jtbrt_bp_l = 0L;
  }
  { jtbNode = new bp_l(n0); }
  { return jtbNode; }
}

long[][] bp_laa$ () /*!*/ :
{}
{
  < ID > {
    return new long[2][];
  }
}

bp_d bp_d() :
{
  bp_d jtbNode = null;
}
{
  (
    < cdID$ >
    {
      jtbrt_bp_d = 0.0;
    }
  )
  { jtbNode = new bp_d(); }
  { return jtbNode; }
}

bp_da bp_da() :
{
  bp_da jtbNode = null;
}
{
  (
    < cdID$ >
    { jtbNode = new bp_da(); }
    {
      jtbrt_bp_da = new double[]{ 0.1e-234,-2.E+303,Double.NaN,Double.NEGATIVE_INFINITY,Double.MIN_NORMAL };
    }
  )
  { return jtbNode; }
}

bp_f bp_f() :
{
  Token n0 = null;
  bp_f jtbNode = null;
}
{
  n0 = < efID >
  {
    jtbrt_bp_f = -123465789.98764321F;
  }
  { jtbNode = new bp_f(n0); }
  { return jtbNode; }
}

float[] bp_fa$ () /*!*/ :
{}
{
  < efID > {
    return new float[]{ -23.E-40F,.12e+30F,Float.MAX_VALUE,Float.POSITIVE_INFINITY };
  }
}

ArrayList<Float> bp_al$ () /*!*/ :
{
  ArrayList<Float> al = new ArrayList<>();
  java.util.ArrayList<Float> jual;
}
{
  < abID > {
    al.add(-23.E-40F);
    jual = new java.util.ArrayList<>(al);
    jual.add(.12e+30F);
    return jual;
  }
}

bp_jual bp_jual() :
{
  Token n0 = null;
  bp_jual jtbNode = null;
  ArrayList<Float> al = new ArrayList<>();
  java.util.ArrayList<Float> jual;
}
{
  n0 = < ID >
  { jtbNode = new bp_jual(n0); }
  {
    al.add(-23.E-40F);
    jual = new java.util.ArrayList<>(al);
    jual.add(.12e+30F);
    jtbrt_bp_jual = jual;
  }
  { return jtbNode; }
}

bp_hm bp_hm(final java.util.ArrayList<Float> jual) :
{
  Token n0 = null;
  bp_hm jtbNode = null;
  java.util.HashMap<String , Float> hm = new java.util.HashMap<>();
}
{
  n0 = < ID >
  { jtbNode = new bp_hm(n0); }
  {
    hm.put("nine", jual == null ? 9.9F : jual.get(9));
    jtbrt_bp_hm = hm;
  }
  { return jtbNode; }
}

bp_tu_a bp_tu_a() :
{
  Token n0 = null;
  NodeSequence n1 = null;
  skipButBuild n2 = null;
  jcp_ubar$ n3 = null;
  bp_v n4 = null;
  bp_tu_a jtbNode = null;
  Tuple tu;
}
{
  n0 = < ID >
  (
        { n1 = new NodeSequence(2); }
    n2 = skipButBuild()
    { n1.addNode(n2); }
    skipButBuild()
    eatNextToken()
    eatNextToken()
    jcp_ubar()
    jcp_ubar()
    n3 = jcp_ubar$()
    { n1.addNode(n3); }
    jcp_ubar$()

  )
  n4 = bp_v()
  bp_v()
  bp_v$()
  bp_v$()
  {
    final Tuple<? super java.lang.CharSequence , ?, Object[]> tv = new Tuple('c', 1, new Object[1]);
    tu = new Tuple("a", 'c', true);
    jtbrt_bp_tu_a = tu;
  }
  { jtbNode = new bp_tu_a(n0, n1, n4); }
  { return jtbNode; }
}

bp_acc bp_acc() :
{
  Token n0 = null;
  NodeOptional n1 = new NodeOptional();
  Token n2 = null;
  NodeListOptional n3 = new NodeListOptional();
  bp_i n4 = null;
  NodeChoice n5 = null;
  bp_v n6 = null;
  NodeSequence n7 = null;
  bp_w n8 = null;
  bp_x n9 = null;
  bp_acc jtbNode = null;
}
{
  n0 = < ID >
  {
    info("- bp_acc after ID");
  }
  [
    n2 = "xyz"
    {
      info("- bp_acc after xyz");
    }
    { n1.addNode(n2); }
  ]
  (
    LOOKAHEAD( 2 )
    n4 = bp_i()
    {
      info("- bp_acc after bp_i");
    }
    { n3.addNode(n4); }
  )*
  { n3.nodes.trimToSize(); }
  (
    (
      n6 = bp_v()
      {
        info("- bp_acc after bp_v");
      }
      { n5 = new NodeChoice(n6, 0, 2); }
    |
      (
                { n7 = new NodeSequence(2); }
        n8 = bp_w()
        { n7.addNode(n8); }
        {
          info("- bp_acc after bp_w");
        }
        n9 = bp_x()
        { n7.addNode(n9); }
        {
          info("- bp_acc after bp_x");
        }

      )
      { n5 = new NodeChoice(n7, 1, 2); }
    )
  )
  { jtbNode = new bp_acc(n0, n1, n3, n5); }
  { return jtbNode; }
}

bp_DoubleThrows bp_DoubleThrows(final int i) throws IllegalStateException, NullPointerException :
{
  bp_DoubleThrows jtbNode = null;
  Token tk = null;
}
{
  (
    < cdID$ >
    {
      if (tk != null)
        throw new NullPointerException();
      else
        if (i == 0)
          throw new IllegalStateException();
    }
  )
  { jtbNode = new bp_DoubleThrows(); }
  { return jtbNode; }
}

bp_class1 bp_class1() :
{
  Token n0 = null;
  bp_class1 jtbNode = null;
}
{
  n0 = < ID >
  { jtbNode = new bp_class1(n0); }
  {
    jtbrt_bp_class1 = new FGclass1();
  }
  { return jtbNode; }
}

FGclass2 bp_class2$ () /*!*/ :
{}
{
  < ID > {
    return new FGclass2();
  }
}

JAVACODE jcp_DoubleThrows jcp_DoubleThrows(final int i) throws IllegalStateException, NullPointerException /*%*/ 
{
  Token tk = getNextToken();{
    if (tk == null)
      throw new NullPointerException();
    else
      if (i == 0)
        throw new IllegalStateException();
  }
  return new jcp_DoubleThrows();
}

JAVACODE skipButBuild skipButBuild() throws ParseException /*%*/ 
{
  Token tk = getNextToken();{
    int[] ai = { 0,0 };
    for (final int i : ai) {
      switch (i) {
      }
      switch (i) {
        default : break;
      }
      switch (i) {
        case 0 :
          {}
          {
            break;
          }
        case 1 :
      }
    } 
    label:
    {
      for (; ; )
        break label;
      
    }
    /* return; statement commented out by JTB */
    class dummyClass {

      int dummyMethod() throws ParseException{
        throw new ParseException();
      }
    }

    try {
      new dummyClass().dummyMethod();
    }
    catch (Exception e) {
      synchronized ("x")
        {
          int j = 0;
        }
    }
    finally {
      label:
      do {
        char c = 'c';
      } while (false);
    }
  }
  return new skipButBuild();
}

JAVACODE void eatNextToken()
{
  Token tk = getNextToken();
}

JAVACODE Token eatAndReturnNextToken()
{
  return getNextToken();
}

expch_a expch_a() :
{
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  Token n2 = null;
  Token n3 = null;
  Token n4 = null;
  expch_a jtbNode = null;
}
{
  (
    LOOKAHEAD( 2 )
    { n1 = new NodeSequence(2); }
    n2 = "!"
    { n1.addNode(n2); }
    n3 = < ID >
    { n1.addNode(n3); }
    { n0 = new NodeChoice(n1, 0, 2); }
    {
      info("- passed ! ID");
    }
  |
    n4 = "!abc"
    { n0 = new NodeChoice(n4, 1, 2); }
    {
      info("- passed ! abc");
    }
  )
  { jtbNode = new expch_a(n0); }
  { return jtbNode; }
}

expch_b expch_b() :
{
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  Token n2 = null;
  Token n3 = null;
  Token n4 = null;
  expch_b jtbNode = null;
}
{
  (
    (
      LOOKAHEAD( 2, "?" < abID > )
      { n1 = new NodeSequence(2); }
      n2 = "?"
      { n1.addNode(n2); }
      n3 = < abID >
      { n1.addNode(n3); }
      {
        info("- passed ? abID");
      }
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      n4 = "?abc"
      {
        info("- passed ? abc");
      }
      { n0 = new NodeChoice(n4, 1, 2); }
    )
  )
  { jtbNode = new expch_b(n0); }
  { return jtbNode; }
}

expch_c expch_c(final int i, final int j) :
{
  NodeChoice n0 = null;
  NodeChoice n1 = null;
  NodeSequence n2 = null;
  Token n3 = null;
  Token n4 = null;
  NodeSequence n5 = null;
  Token n6 = null;
  Token n7 = null;
  NodeSequence n8 = null;
  Token n9 = null;
  Token n10 = null;
  NodeSequence n11 = null;
  NodeOptional n12 = new NodeOptional();
  NodeSequence n13 = null;
  Token n14 = null;
  Token n15 = null;
  NodeListOptional n16 = new NodeListOptional();
  NodeSequence n17 = null;
  Token n18 = null;
  Token n19 = null;
  NodeList n20 = new NodeList();
  NodeSequence n21 = null;
  Token n22 = null;
  Token n23 = null;
  Token n24 = null;
  NodeSequence n25 = null;
  Token n26 = null;
  Token n27 = null;
  expch_c jtbNode = null;
  global_i = i;
  global_j = j;
}
{
  (
    (
      LOOKAHEAD( 2 )
      (
        (
          LOOKAHEAD( < NUM_3_9 > "!NUM_3_9!" )
          { n2 = new NodeSequence(2); }
          n3 = < NUM_3_9 >
          { n2.addNode(n3); }
          n4 = "!NUM_3_9!"
          { n2.addNode(n4); }
          {
            info("- passed expch_c NUM_3_9 !NUM_3_9!");
          }
          { n1 = new NodeChoice(n2, 0, 4); }
        |
          { n5 = new NodeSequence(2); }
          n6 = < NUM_3_9 >
          { n5.addNode(n6); }
          n7 = < ID >
          { n5.addNode(n7); }
          {
            info("- passed expch_c NUM_3_9 ID");
          }
          { n1 = new NodeChoice(n5, 1, 4); }
        |
          LOOKAHEAD( { global_i == 0 } )
          { n8 = new NodeSequence(2); }
          n9 = < ID >
          { n8.addNode(n9); }
          n10 = "i==0"
          { n8.addNode(n10); }
          {
            info("- passed expch_c ID 0");
          }
          { n1 = new NodeChoice(n8, 2, 4); }
        |
          LOOKAHEAD( < ID >, { global_i == 1 } )
          { n11 = new NodeSequence(3); }
          (
            LOOKAHEAD( 2, < ID > "i==1" )
            { n13 = new NodeSequence(2); }
            n14 = < ID >
            { n13.addNode(n14); }
            n15 = "i==1"
            { n13.addNode(n15); }
            {
              info("- passed expch_c ID 1");
            }
            { n12.addNode(n13); }
          )?
          { n11.addNode(n12); }
          (
            LOOKAHEAD( 2, { global_j == 2 } )
            { n17 = new NodeSequence(2); }
            n18 = < ID >
            { n17.addNode(n18); }
            n19 = "j==2"
            { n17.addNode(n19); }
            {
              info("- passed expch_c ID 2");
            }
            { n16.addNode(n17); }
          )*
          { n16.nodes.trimToSize(); }
          { n11.addNode(n16); }
          (
            LOOKAHEAD( 2, < ID > "j==3", { global_j == 3 } )
            { n21 = new NodeSequence(2); }
            n22 = < ID >
            { n21.addNode(n22); }
            n23 = "j==3"
            { n21.addNode(n23); }
            {
              info("- passed expch_c ID 3");
            }
            { n20.addNode(n21); }
          )+
          { n20.nodes.trimToSize(); }
          { n11.addNode(n20); }
          { n1 = new NodeChoice(n11, 3, 4); }
        )
      )
      { n0 = new NodeChoice(n1, 0, 3); }
    |
      n24 = < ES >
      {
        info("- passed expch_c ES");
      }
      { n0 = new NodeChoice(n24, 1, 3); }
    |
      { n25 = new NodeSequence(2); }
      n26 = < NUM_3_9 >
      { n25.addNode(n26); }
      n27 = "*39*"
      { n25.addNode(n27); }
      {
        info("- passed expch_c NUM_3_9 *39*");
      }
      { n0 = new NodeChoice(n25, 2, 3); }
    )
  )
  { jtbNode = new expch_c(n0); }
  { return jtbNode; }
}

expch_em_lxac expch_em_lxac() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  Token n2 = null;
  Token n3 = null;
  Token n4 = null;
  expch_em_lxac jtbNode = null;
}
{
  (
    (
      LOOKAHEAD( ":poi" )
      n1 = ":poi"
      { n0 = new NodeChoice(n1, 0, 4); }
    |
      LOOKAHEAD( ":uyt" )
      {}
      n2 = ":uyt"
      { n0 = new NodeChoice(n2, 1, 4); }
    |
      n3 = ":rez"
      {}
      { n0 = new NodeChoice(n3, 2, 4); }
    |
      {}
      { n0 = new NodeChoice(null, 3, 4); }
    )
  )
  n4 = "/"
  { jtbNode = new expch_em_lxac(n0, n4); }
  { return jtbNode; }
}

void expch_wosn_a () /*!*/ :
{}
{
  LOOKAHEAD ( 2 )
  ";abc"
           | < ID > /*!*/ 
}

void expch_wosn_b () /*!*/ :
{}
{
  LOOKAHEAD ( 2, ";def" )
  ";def" /*!*/ 
           | < efID >
}

expch_wnsn expch_wnsn() :
{
  expch_wnsn jtbNode = null;
}
{
  (
    LOOKAHEAD( 2, ";ghi1", { 1 == 1 } )
    ";ghi1"
    ";x"
    |
    LOOKAHEAD( 2, ";ghi2" )
    ";ghi2"
    ";x"
    |
    LOOKAHEAD( 2, { 2 == 2 } )
    ";ghi3"
    ";x"
    |
    LOOKAHEAD( ";ghi4", { 3 == 3 } )
    ";ghi4"
    ";x"
    |
    LOOKAHEAD( ";ghi5" )
    ";ghi5"
    ";x"
    |
    LOOKAHEAD( 2 )
    ";ghi6"
    ";x"
    |
    < ID >
    ";x"
    |
    (
      (
        ";x"
        |
        ";y"
        |
        ";z"
      )
    )
    |
    (
";1" /*!*/     )
    |
    (
      LOOKAHEAD( 2 )
      (
        ";2"
      )
    )+
    |
    (
      LOOKAHEAD( 2 )
      (
        ";3"
      )
    )*
    |
    (
      LOOKAHEAD( 2 )
      (
        ";4"
      )
    )?
    |
    [
      LOOKAHEAD( 2 )
      (
        ";5"
      )

    ]
  )
  { jtbNode = new expch_wnsn(); }
  { return jtbNode; }
}

expch_2ch expch_2ch() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  expch_2ch jtbNode = null;
}
{
  (
    (
      n1 = ",jkl"
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      ",mno"
      { n0 = new NodeChoice(null, 1, 2); }
    )
  )
  (
    (
      ",pqr"
      { n2 = new NodeChoice(null, 0, 2); }
    |
      n3 = ",stu"
      { n2 = new NodeChoice(n3, 1, 2); }
    )
  )
  { jtbNode = new expch_2ch(n0, n2); }
  { return jtbNode; }
}

expch_bl_a expch_bl_a() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  expch_bl_a jtbNode = null;
}
{
  (
    n1 = < NUM_3_9 >
    { n0 = new NodeChoice(n1, 0, 2); }
  |
    { n0 = new NodeChoice(null, 1, 2); }
    {
      some_lexical_action();
    }
  )
  { jtbNode = new expch_bl_a(n0); }
  { return jtbNode; }
}

expch_bl_a$ expch_bl_a$() :
{
  expch_bl_a$ jtbNode = null;
}
{
  (
    < NUM_2$ >
    |
    {
      some_lexical_action();
    }
  )
  { jtbNode = new expch_bl_a$(); }
  { return jtbNode; }
}

expch_bl_b expch_bl_b() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  expch_bl_b jtbNode = null;
}
{
  (
    { n0 = new NodeChoice(null, 0, 2); }
    {
      some_lexical_action();
    }
  |
    n1 = < NUM_3_9 >
    { n0 = new NodeChoice(n1, 1, 2); }
  )
  { jtbNode = new expch_bl_b(n0); }
  { return jtbNode; }
}

expch_bl_b$ expch_bl_b$() :
{
  expch_bl_b$ jtbNode = null;
}
{
  (
    {
      some_lexical_action();
    }
    |
    < NUM_2$ >
  )
  { jtbNode = new expch_bl_b$(); }
  { return jtbNode; }
}

expch_bl_c expch_bl_c() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  expch_bl_c jtbNode = null;
}
{
  (
    LOOKAHEAD( { some_lookahead() } )
    { n0 = new NodeChoice(null, 0, 2); }
    {
      some_lexical_action();
    }
  |
    n1 = < NUM_3_9 >
    { n0 = new NodeChoice(n1, 1, 2); }
  )
  { jtbNode = new expch_bl_c(n0); }
  { return jtbNode; }
}

expch_bl_c$ expch_bl_c$() :
{
  expch_bl_c$ jtbNode = null;
}
{
  (
    LOOKAHEAD( { some_lookahead() } )
    {
      some_lexical_action();
    }
    |
    < NUM_2$ >
  )
  { jtbNode = new expch_bl_c$(); }
  { return jtbNode; }
}

expch_bl_d expch_bl_d() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  Token n2 = null;
  Token n3 = null;
  expch_bl_d jtbNode = null;
}
{
  (
    LOOKAHEAD( 2 )
    n1 = < A_BS_B >
    { n0 = new NodeChoice(n1, 0, 8); }
    {
      some_lexical_action();
    }
  |
    {
      some_lexical_action();
    }
    n2 = < NUM_3_9 >
    { n0 = new NodeChoice(n2, 1, 8); }
  |
    < NUM_2$ >
    { n0 = new NodeChoice(null, 2, 8); }
    {
      some_lexical_action();
    }
  |
    {
      some_lexical_action();
    }
    < A_BS_B >
    { n0 = new NodeChoice(null, 3, 8); }
  |
    { n0 = new NodeChoice(null, 4, 8); }
    {
      boolean a = true;
    }
  |
    {
      boolean b1 = true;
    }
    { n0 = new NodeChoice(null, 5, 8); }
    {
      boolean b2 = true;
    }
  |
    {
      boolean c1 = true;
    }
    {
      boolean c2 = true;
    }
    { n0 = new NodeChoice(null, 6, 8); }
    {
      boolean c3 = true;
    }
  |
    n3 = "$^$^"
    { n0 = new NodeChoice(n3, 7, 8); }
  )
  { jtbNode = new expch_bl_d(n0); }
  { return jtbNode; }
}

expch_eu_a expch_eu_a() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  Token n2 = null;
  NodeSequence n3 = null;
  Token n4 = null;
  NodeChoice n5 = null;
  Token n6 = null;
  Token n7 = null;
  NodeOptional n8 = new NodeOptional();
  NodeOptional n9 = null;
  NodeChoice n10 = null;
  Token n11 = null;
  Token n12 = null;
  NodeOptional n13 = new NodeOptional();
  NodeOptional n14 = null;
  NodeChoice n15 = null;
  Token n16 = null;
  Token n17 = null;
  NodeListOptional n18 = new NodeListOptional();
  NodeSequence n19 = null;
  Token n20 = null;
  NodeListOptional n21 = null;
  NodeChoice n22 = null;
  Token n23 = null;
  NodeList n24 = new NodeList();
  NodeSequence n25 = null;
  NodeOptional n26 = null;
  Token n27 = null;
  NodeList n28 = null;
  NodeChoice n29 = null;
  Token n30 = null;
  Token n31 = null;
  expch_eu_a jtbNode = null;
}
{
  (
    n1 = < abID >
    { n0 = new NodeChoice(n1, 0, 4); }
  |
    < ["="] >
    { n0 = new NodeChoice(null, 1, 4); }
  |
    n2 = < OP : ["+"] >
    { n0 = new NodeChoice(n2, 2, 4); }
  |
    { n3 = new NodeSequence(6); }
    n4 = "*1"
    { n3.addNode(n4); }
    (
      (
        n6 = < SC1 : ";1" >
        { n5 = new NodeChoice(n6, 0, 3); }
      |
        < cdID$ >
        { n5 = new NodeChoice(null, 1, 3); }
      |
        n7 = < efID >
        { n5 = new NodeChoice(n7, 2, 3); }
      )
    )
    { n3.addNode(n5); }
    [
      { n9 = new NodeOptional(); }
      < SC2 : ( ";2" ) >
      (
        LOOKAHEAD( 2 )
        (
          (
            n11 = < abID >
            { n10 = new NodeChoice(n11, 0, 3); }
          |
            n12 = < "*2" >
            { n10 = new NodeChoice(n12, 1, 3); }
          |
            "*3"
            { n10 = new NodeChoice(null, 2, 3); }
          )
        )
        { n9.addNode(n10); }
      )?
      { n8.addNode(n9); }
    ]
    { n3.addNode(n8); }
    (
      { n14 = new NodeOptional(); }
      < SC3 : ( ";3" )+ >
      (
        LOOKAHEAD( 2 )
        (
          (
            n16 = < abID >
            { n15 = new NodeChoice(n16, 0, 3); }
          |
            n17 = < "*2" >
            { n15 = new NodeChoice(n17, 1, 3); }
          |
            "*3"
            { n15 = new NodeChoice(null, 2, 3); }
          )
        )
        { n14.addNode(n15); }
      )?
      { n13.addNode(n14); }
    )?
    { n3.addNode(n13); }
    (
      { n21 = new NodeListOptional(); }
      { n19 = new NodeSequence(2); }
      n20 = "*4"
      { n19.addNode(n20); }
      (
        LOOKAHEAD( 2 )
        (
          (
            < abID >
            { n22 = new NodeChoice(n20, 0, 3); }
          |
            < cdID$ >
            { n22 = new NodeChoice(null, 1, 3); }
          |
            n23 = < efID >
            { n22 = new NodeChoice(n23, 2, 3); }
          )
        )
        { n21.addNode(n22); }
      )*
      { n21.nodes.trimToSize(); }
      { n19.addNode(n21); }
      { n18.addNode(n19); }
    )*
    { n18.nodes.trimToSize(); }
    { n3.addNode(n18); }
    (
      { n26 = new NodeOptional(); }
      { n28 = new NodeList(); }
      { n25 = new NodeSequence(2); }
      (
        n27 = < "*5" >
        { n26.addNode(n27); }
      )?
      { n25.addNode(n26); }
      (
        LOOKAHEAD( 2 )
        (
          (
            n30 = < abID >
            { n29 = new NodeChoice(n30, 0, 5); }
          |
            < "*6" >
            { n29 = new NodeChoice(null, 1, 5); }
          |
            n31 = < SC4 : ( ";4" )+ >
            { n29 = new NodeChoice(n31, 2, 5); }
          |
            < SC5 : ( ";5" ){7, 8} >
            { n29 = new NodeChoice(null, 3, 5); }
          |
            < SC6 : ( ";6" ){9} >
            { n29 = new NodeChoice(null, 4, 5); }
          )
        )
        { n28.addNode(n29); }
      )+
      { n28.nodes.trimToSize(); }
      { n25.addNode(n28); }
      { n24.addNode(n25); }
    )+
    { n24.nodes.trimToSize(); }
    { n3.addNode(n24); }
    { n0 = new NodeChoice(n3, 3, 4); }
  )
  { jtbNode = new expch_eu_a(n0); }
  { return jtbNode; }
}

expun_a1 expun_a1() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Identifier n4 = null;
  NodeChoice n5 = null;
  Token n6 = null;
  Identifier n7 = null;
  expun_a1 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n4 = Identifier()
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  (
    (
      LOOKAHEAD( < ID > )
      n6 = < ID >
      { n5 = new NodeChoice(n6, 0, 2); }
    |
      n7 = Identifier()
      { n5 = new NodeChoice(n7, 1, 2); }
    )
  )
  { jtbNode = new expun_a1(n0, n1, n2, n5); }
  { return jtbNode; }
}

expun_b1 expun_b1() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Identifier n4 = null;
  eu_id_or_ident n5 = null;
  expun_b1 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n4 = Identifier()
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  n5 = eu_id_or_ident()
  { jtbNode = new expun_b1(n0, n1, n2, n5); }
  { return jtbNode; }
}

expun_c1 expun_c1() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Identifier n4 = null;
  expun_c1 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n4 = Identifier()
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  eu_id_or_ident$()
  { jtbNode = new expun_c1(n0, n1, n2); }
  { return jtbNode; }
}

expun_d1 expun_d1() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Identifier n4 = null;
  expun_d1 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n4 = Identifier()
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  eu_id_or_ident()
  { jtbNode = new expun_d1(n0, n1, n2); }
  { return jtbNode; }
}

expun_a2 expun_a2() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  NodeSequence n4 = null;
  Identifier n5 = null;
  NodeChoice n6 = null;
  Token n7 = null;
  Identifier n8 = null;
  expun_a2 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      { n4 = new NodeSequence(2); }
      n5 = Identifier()
      { n4.addNode(n5); }
      (
        (
          LOOKAHEAD( < ID > )
          n7 = < ID >
          { n6 = new NodeChoice(n7, 0, 2); }
        |
          n8 = Identifier()
          { n6 = new NodeChoice(n8, 1, 2); }
        )
      )
      { n4.addNode(n6); }
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  { jtbNode = new expun_a2(n0, n1, n2); }
  { return jtbNode; }
}

expun_b2 expun_b2() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  NodeSequence n4 = null;
  Identifier n5 = null;
  eu_id_or_ident n6 = null;
  expun_b2 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      { n4 = new NodeSequence(2); }
      n5 = Identifier()
      { n4.addNode(n5); }
      n6 = eu_id_or_ident()
      { n4.addNode(n6); }
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  { jtbNode = new expun_b2(n0, n1, n2); }
  { return jtbNode; }
}

expun_c2 expun_c2() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Identifier n4 = null;
  expun_c2 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n4 = Identifier()
      eu_id_or_ident$()
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  { jtbNode = new expun_c2(n0, n1, n2); }
  { return jtbNode; }
}

expun_d2 expun_d2() :
{
  Token n0 = null;
  Identifier n1 = null;
  NodeChoice n2 = null;
  Token n3 = null;
  Identifier n4 = null;
  expun_d2 jtbNode = null;
}
{
  n0 = < ID >
  n1 = Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n3 = < ID >
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n4 = Identifier()
      eu_id_or_ident()
      { n2 = new NodeChoice(n4, 1, 2); }
    )
  )
  { jtbNode = new expun_d2(n0, n1, n2); }
  { return jtbNode; }
}

expun_a3 expun_a3() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  NodeSequence n2 = null;
  Identifier n3 = null;
  eu_id_or_ident n4 = null;
  expun_a3 jtbNode = null;
}
{
  < ID >
  Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n1 = < ID >
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      { n2 = new NodeSequence(2); }
      n3 = Identifier()
      { n2.addNode(n3); }
      n4 = eu_id_or_ident()
      { n2.addNode(n4); }
      { n0 = new NodeChoice(n2, 1, 2); }
    )
  )
  { jtbNode = new expun_a3(n0); }
  { return jtbNode; }
}

expun_b3 expun_b3() :
{
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  Identifier n2 = null;
  eu_id_or_ident n3 = null;
  expun_b3 jtbNode = null;
}
{
  < ID >
  Identifier()
  (
    (
      LOOKAHEAD( { true } )
      < ID >
      { n0 = new NodeChoice(null, 0, 2); }
    |
      { n1 = new NodeSequence(2); }
      n2 = Identifier()
      { n1.addNode(n2); }
      n3 = eu_id_or_ident()
      { n1.addNode(n3); }
      { n0 = new NodeChoice(n1, 1, 2); }
    )
  )
  { jtbNode = new expun_b3(n0); }
  { return jtbNode; }
}

expun_c3 expun_c3() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  expun_c3 jtbNode = null;
}
{
  < ID >
  Identifier()
  (
    (
      LOOKAHEAD( { true } )
      n1 = < ID >
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      Identifier()
      eu_id_or_ident()
      { n0 = new NodeChoice(null, 1, 2); }
    )
  )
  { jtbNode = new expun_c3(n0); }
  { return jtbNode; }
}

expun_d3 expun_d3() :
{
  expun_d3 jtbNode = null;
}
{
  (
    < ID >
    Identifier()
    (
      (
        LOOKAHEAD( { true } )
        < ID >
        |
        Identifier()
        eu_id_or_ident()
      )
    )
  )
  { jtbNode = new expun_d3(); }
  { return jtbNode; }
}

eu_id_or_ident eu_id_or_ident() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  Identifier n2 = null;
  eu_id_or_ident jtbNode = null;
}
{
  (
    LOOKAHEAD( < ID > )
    n1 = < ID >
    { n0 = new NodeChoice(n1, 0, 2); }
  |
    n2 = Identifier()
    { n0 = new NodeChoice(n2, 1, 2); }
  )
  { jtbNode = new eu_id_or_ident(n0); }
  { return jtbNode; }
}

void eu_id_or_ident$ () /*!*/ :
{}
{
  LOOKAHEAD ( { true } )
  < ID >
           | Identifier()
}

Identifier Identifier() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  Token n2 = null;
  Identifier jtbNode = null;
}
{
  (
    n1 = < A_BS_B >
    { n0 = new NodeChoice(n1, 0, 2); }
  |
    n2 = < ID >
    { n0 = new NodeChoice(n2, 1, 2); }
  )
  { jtbNode = new Identifier(n0); }
  { return jtbNode; }
}

check_proper_formatting check_proper_formatting() :
{
  NodeChoice n0 = null;
  Token n1 = null;
  Token n2 = null;
  check_proper_formatting jtbNode = null;
  int count = 0;
}
{
  (
    LOOKAHEAD( < ID >
             | < ES > )
    n1 = < ID >
    { n0 = new NodeChoice(n1, 0, 2); }
  |
    n2 = < ES >
    { n0 = new NodeChoice(n2, 1, 2); }
    {
      @SuppressWarnings("unused") boolean b = false;
      jtbrt_check_proper_formatting = ++count;
    }
  )
  { jtbNode = new check_proper_formatting(n0); }
  { return jtbNode; }
}

f0_eu1_be f0_eu1_be() :
{
  f0_eu1_be jtbNode = null;
}
{
  (
    {}
  )
  { jtbNode = new f0_eu1_be(); }
  { return jtbNode; }
}

f0_eu1_b1 f0_eu1_b1() :
{
  f0_eu1_b1 jtbNode = null;
}
{
  (
    {
      String s = "f0_eu1_b1";
    }
  )
  { jtbNode = new f0_eu1_b1(); }
  { return jtbNode; }
}

f0_eu1_b2 f0_eu1_b2() :
{
  f0_eu1_b2 jtbNode = null;
}
{
  (
    { jtbNode = new f0_eu1_b2(); }
    {
      jtbrt_f0_eu1_b2 = "f0_eu1_b2";
    }
  )
  { return jtbNode; }
}

f0_eu1_ias1 f0_eu1_ias1() :
{
  f0_eu1_be n0 = null;
  f0_eu1_ias1 jtbNode = null;
}
{
  n0 = f0_eu1_be()
  { jtbNode = new f0_eu1_ias1(n0); }
  { return jtbNode; }
}

f0_eu1_ias2 f0_eu1_ias2() :
{
  f0_eu1_b1 n0 = null;
  f0_eu1_ias2 jtbNode = null;
}
{
  try {
    n0 = f0_eu1_b1()
  }
  finally {}
  { jtbNode = new f0_eu1_ias2(n0); }
  { return jtbNode; }
}

f0_eu2_all1 f0_eu2_all1() :
{
  NodeOptional n1 = new NodeOptional();
  Token n2 = null;
  f0_eu1_b1 n3 = null;
  NodeSequence n4 = null;
  Token n5 = null;
  NodeSequence n6 = null;
  Token n7 = null;
  Token n8 = null;
  NodeListOptional n10 = new NodeListOptional();
  Token n11 = null;
  NodeOptional n12 = new NodeOptional();
  NodeChoice n13 = null;
  Token n14 = null;
  Token n15 = null;
  Token n16 = null;
  f0_eu1_peias2 n17 = null;
  NodeChoice n18 = null;
  expch_a n19 = null;
  expch_b n20 = null;
  NodeChoice n21 = null;
  expch_2ch n22 = null;
  expch_bl_a n23 = null;
  f0_eu2_all1 jtbNode = null;
  int k;
  String im;
}
{
  LOOKAHEAD( 0 )
  LOOKAHEAD( 1 )
  [
    LOOKAHEAD( 2 )
    (
      k = ".".kind
    )

  ]
  [
    LOOKAHEAD( 2 )
    n2 = ";"
    { im = n2.image; }
    { n1.addNode(n2); }
  ]
  LOOKAHEAD( 1 )
  n3 = f0_eu1_b1()
  (
        { n4 = new NodeSequence(2); }
    n5 = ";; "
    { n4.addNode(n5); }
    (
            { n6 = new NodeSequence(2); }
      n7 = ";;; "
      { n6.addNode(n7); }
      n8 = ";;;; "
      { n6.addNode(n8); }

    )

  )
  (
"!! " /*!*/  (
      "!!! " /*!*/  "!!!! " /*!*/ 
    )  )
  (
    LOOKAHEAD( "%ctbu?no***" )
    (
      "%ctbu?no***"
      im = < A_BS_B >.image
    )
  )+
  (
    LOOKAHEAD( 1, "%ctbu?yes" /*!*/  )
    "%ctbu?yes"
    n11 = < NUM_3_9 >
    { n10.addNode(n11); }
  )*
  { n10.nodes.trimToSize(); }
  (
    LOOKAHEAD( ":" )
    (
      (
        LOOKAHEAD( ":" < ES > /*!*/  )
        n14 = ":"
        < ES >
        { n13 = new NodeChoice(n14, 0, 3); }
      |
        LOOKAHEAD( ":" /*!*/  < NUM_3_9 > )
        ":"
        n15 = < NUM_3_9 >
        { n13 = new NodeChoice(n15, 1, 3); }
      |
        n16 = ":"
        < NOT_BUILT >
        { n13 = new NodeChoice(n16, 2, 3); }
      )
    )
    { n12.addNode(n13); }
  )?
  try {
    n17 = f0_eu1_peias2()
    try {
      (
        n19 = expch_a()
        { n18 = new NodeChoice(n19, 0, 2); }
      |
        n20 = expch_b()
        { n18 = new NodeChoice(n20, 1, 2); }
      )
    }
    finally {}
    try {
      (
        (
          n22 = expch_2ch()
          { n21 = new NodeChoice(n22, 0, 2); }
        |
          n23 = expch_bl_a()
          { n21 = new NodeChoice(n23, 1, 2); }
        )
      )
    }
    catch (/* final */ Exception e) {}
  }
  catch (ParseException pe) {
    pe = null;
  }
  catch (/* final */ Exception e) {}
  { jtbNode = new f0_eu2_all1(n1, n3, n4, n10, n12, n17, n18, n21); }
  { return jtbNode; }
}

void f0_eu2_all1$ () /*!*/ :
{
  int k;
  String im;
}
{
  LOOKAHEAD ( 0 )
  LOOKAHEAD ( 1 )
 [
    LOOKAHEAD ( 2 )
    k = ".".kind /*!*/ 
  ]
 [
    LOOKAHEAD ( 2 )
    im = ";".image
  ]
 LOOKAHEAD ( 1 )
 f0_eu1_b1() (
    ";; " (
      ";;; " ";;;; "
    )
  ) (
    "!! " /*!*/  (
      "!!! " /*!*/  "!!!! " /*!*/ 
    )
  ) (
    LOOKAHEAD ( "%ctbu?no***" )
    "%ctbu?no***" /*!*/  im = < A_BS_B >.image /*!*/ 
  )+ (
    LOOKAHEAD ( 1, "%ctbu?yes" /*!*/  )
    "%ctbu?yes" /*!*/  < NUM_3_9 >
  )* (
    LOOKAHEAD ( ":" )
    (
      LOOKAHEAD ( ":" < ES > /*!*/  )
      ":" < ES > /*!*/ 
               | LOOKAHEAD ( ":" /*!*/  < NUM_3_9 > )
              ":" /*!*/  < NUM_3_9 >
               | ":" < NOT_BUILT >
    )
  )? try {
    f0_eu1_peias2() try {
      expch_a()
               | expch_b()
    } finally {}
 try {
      (
        expch_2ch()
                 | expch_bl_a()
      )
    } catch (/* final */ Exception e) {}
  } catch (ParseException pe) {
    pe = null;
  } catch (/* final */ Exception e) {}
}

f0_eu1_jc f0_eu1_jc() :
{
  f0_eu1_jc jtbNode = null;
}
{
  (
    eatNextToken()
  )
  { jtbNode = new f0_eu1_jc(); }
  { return jtbNode; }
}

f0_eu1_peias1 f0_eu1_peias1() :
{
  f0_eu1_b2 n0 = null;
  f0_eu1_peias1 jtbNode = null;
  String s;
}
{
  { String oldJtbrt_f0_eu1_b2_1 = jtbrt_f0_eu1_b2; }
  n0 = f0_eu1_b2()
  { s = jtbrt_f0_eu1_b2; }
  { jtbrt_f0_eu1_b2 = oldJtbrt_f0_eu1_b2_1; }
  { jtbNode = new f0_eu1_peias1(n0); }
  { return jtbNode; }
}

f0_eu1_peias2 f0_eu1_peias2() :
{
  f0_eu1_b2 n0 = null;
  f0_eu1_peias2 jtbNode = null;
  String s;
}
{
  { String oldJtbrt_f0_eu1_b2_1 = jtbrt_f0_eu1_b2; }
  n0 = f0_eu1_b2()
  { s = jtbrt_f0_eu1_b2; }
  { jtbrt_f0_eu1_b2 = oldJtbrt_f0_eu1_b2_1; }
  { jtbNode = new f0_eu1_peias2(n0); }
  {
    jtbrt_f0_eu1_peias2 = "f0_eu1_peias / " + s;
  }
  { return jtbNode; }
}

f0_eu1_pejc1 f0_eu1_pejc1() :
{
  f0_eu1_pejc1 jtbNode = null;
  Token tk = null;
}
{
  (
    tk=eatAndReturnNextToken()
  )
  { jtbNode = new f0_eu1_pejc1(); }
  { return jtbNode; }
}

f0_eu1_pejc2 f0_eu1_pejc2() :
{
  f0_eu1_pejc2 jtbNode = null;
  Token tk = null;
}
{
  (
    tk=eatAndReturnNextToken()
    { jtbNode = new f0_eu1_pejc2(); }
    {
      jtbrt_f0_eu1_pejc2 = "f0_eu1_pejc / " + tk.image;
    }
  )
  { return jtbNode; }
}

f0_eu1_resl1 f0_eu1_resl1() :
{
  Token n0 = null;
  f0_eu1_resl1 jtbNode = null;
}
{
  n0 = "!"
  { jtbNode = new f0_eu1_resl1(n0); }
  { return jtbNode; }
}

f0_eu1_resl2 f0_eu1_resl2() :
{
  Token n0 = null;
  f0_eu1_resl2 jtbNode = null;
}
{
  n0 = < resl2 : "!x" >
  { jtbNode = new f0_eu1_resl2(n0); }
  { return jtbNode; }
}

f0_eu1_resl3 f0_eu1_resl3() :
{
  Token n0 = null;
  f0_eu1_resl3 jtbNode = null;
}
{
  n0 = < resl3 : <resl2> >
  { jtbNode = new f0_eu1_resl3(n0); }
  { return jtbNode; }
}

f0_eu1_recrec1 f0_eu1_recrec1() :
{
  Token n0 = null;
  f0_eu1_recrec1 jtbNode = null;
}
{
  n0 = < recrec1 :
      <abID> <ID>
    | <efID>
  >
  { jtbNode = new f0_eu1_recrec1(n0); }
  { return jtbNode; }
}

f0_eu1_recrec2 f0_eu1_recrec2() :
{
  Token n0 = null;
  f0_eu1_recrec2 jtbNode = null;
}
{
  n0 = < recrec2 :
      "!"
    | <resl2>
    | <resl3>
    | <efID>
    | ( "#1" )
    | 
      (
        ( "#2" )? "#3"
      | 
        (
          ( "#4" )* "#5"
        | ( "#6" )+
        )
      )
    | ( "#7" <A_BS_B> )
      (
        "#8"
      | <SYN_ESC>
      )
  >
  { jtbNode = new f0_eu1_recrec2(n0); }
  { return jtbNode; }
}

f0_eu1_recrec3 f0_eu1_recrec3() :
{
  Token n0 = null;
  f0_eu1_recrec3 jtbNode = null;
}
{
  n0 = < recrec3 :
      "'"
    | <recrec1>
    | <recrec2>
  >
  { jtbNode = new f0_eu1_recrec3(n0); }
  { return jtbNode; }
}

f0_eu1_retk f0_eu1_retk() :
{
  f0_eu1_retk jtbNode = null;
}
{
  (
    < cdID$ >
  )
  { jtbNode = new f0_eu1_retk(); }
  { return jtbNode; }
}

f0_eu1_reeof f0_eu1_reeof() :
{
  Token n0 = null;
  f0_eu1_reeof jtbNode = null;
}
{
    n0 = < EOF >
  { n0.beginColumn++; }
  { n0.endColumn++; }
  { jtbNode = new f0_eu1_reeof(n0); }
  { return jtbNode; }
}

f0_laeu2_be f0_laeu2_be() :
{
  f0_laeu2_be jtbNode = null;
}
{
  (
    LOOKAHEAD( 1 )
    {}
  )
  { jtbNode = new f0_laeu2_be(); }
  { return jtbNode; }
}

f0_laeu2_b1 f0_laeu2_b1() :
{
  f0_laeu2_b1 jtbNode = null;
}
{
  (
    LOOKAHEAD( 1 )
    {
      String s = "f0_eu1_b1";
    }
  )
  { jtbNode = new f0_laeu2_b1(); }
  { return jtbNode; }
}

f0_laeu2_ias1 f0_laeu2_ias1() :
{
  f0_eu1_be n0 = null;
  f0_laeu2_ias1 jtbNode = null;
}
{
  LOOKAHEAD( 1 )
  n0 = f0_eu1_be()
  { jtbNode = new f0_laeu2_ias1(n0); }
  { return jtbNode; }
}

f0_laeu2_ias2 f0_laeu2_ias2() :
{
  f0_eu1_b1 n0 = null;
  f0_laeu2_ias2 jtbNode = null;
}
{
  LOOKAHEAD( 1 )
  n0 = f0_eu1_b1()
  { jtbNode = new f0_laeu2_ias2(n0); }
  { return jtbNode; }
}

f0_laeu2_jc f0_laeu2_jc() :
{
  f0_laeu2_jc jtbNode = null;
}
{
  (
    LOOKAHEAD( 1 )
    eatNextToken()
  )
  { jtbNode = new f0_laeu2_jc(); }
  { return jtbNode; }
}

gt_1 gt_1() :
{
  Token n0 = null;
  gt_1 jtbNode = null;
}
{
  {
    List<Token> l1 = new ArrayList<>();
    List<List<Token>> l2 = new ArrayList<List<Token>>();
    List<List<List<Token>>> l3 = new ArrayList<List<List<Token>>>();
    List<List<List<List<Token>>>> l4 = new ArrayList<List<List<List<Token>>>>();
    boolean b = 1 > 2;
    b = 3 >= 4;
    int i = 5 >> 6;
    i = 7 >>> 8;
    i >>= 9;
    i >>>= 10;
  }
  n0 = " >;"
  { jtbNode = new gt_1(n0); }
  { return jtbNode; }
}

lt_1 lt_1() :
{
  Token n0 = null;
  lt_1 jtbNode = null;
}
{
  {
    boolean b = 1 < 2;
    b = 3 <= 4;
    int i = 5 << 6;
    i = 7 << 8;
    i <<= 9;
  }
  n0 = "<;"
  { jtbNode = new lt_1(n0); }
  { return jtbNode; }
}

