/* Generated by JTB 1.5.1 */
options
{
  STATIC = false;
  OUTPUT_DIRECTORY = "../../../../../target/generated-tests/jj/grammars/p";
  // JTB_O = "../../../../../target/generated-tests/jtb/grammars/p/NoPackageGrammar.jj";
  // JTB_D = "../../../../../target/generated-tests/jtb/grammars/p";
  // JTB_IA = true;
}

PARSER_BEGIN(NoPackageGrammar)
import java.util.ArrayList;


public class NoPackageGrammar {


  /** Return variable for the {@link #bp_jual} BNFProduction) */
  java.util.ArrayList<Float> jtbrt_bp_jual;

  /** Return variable for the {@link #bp_hm} BNFProduction) */
  java.util.HashMap<String, Float> jtbrt_bp_hm;

  /** Return variable for the {@link #jc_0} JavaCodeProduction) */
  int jtbrt_jc_0;

  public static void main(String args[]) {
    System.out.println("NoPackageGrammar Reading ...");
    NoPackageGrammar npg = new NoPackageGrammar(System.in);
    try {
      System.err.println("... Parsing...");
      classDeclaration cd = npg.classDeclaration();
      DepthFirstVoidVisitor v = new DepthFirstVoidVisitor();
      System.out.println("... Visiting...");
      cd.accept(v);
      System.out.println("NoPackageGrammar ended.");
      System.exit(0);
    }
    catch (final Exception e) {
      System.out.flush();
      System.err.println("Oops!");
      System.err.println(e.getMessage());
      System.exit(-1);
    }
  }
}

PARSER_END(NoPackageGrammar)

classDeclaration classDeclaration() :
{
  Token n0 = null;
  className n1 = null;
  Token n2 = null;
  NodeListOptional n3 = new NodeListOptional();
  NodeChoice n4 = null;
  method n5 = null;
  instruction n6 = null;
  Token n7 = null;
  Token n8 = null;
  jc_0 n9 = null;
  Token n10 = null;
  classDeclaration jtbNode = null;
}
{
  n0 = "class"
  n1 = className()
  n2 = "{"
  (
    (
      LOOKAHEAD( 2 )
      n5 = method()
      { n4 = new NodeChoice(n5, 0, 2); }
    |
      n6 = instruction()
      { n4 = new NodeChoice(n6, 1, 2); }
    )
    { n3.addNode(n4); }
  )*
  { n3.nodes.trimToSize(); }
  n7 = "}"
  n8 = "."
  n9 = jc_0()
    n10 = < EOF >
  { n10.beginColumn++; }
  { n10.endColumn++; }
  { jtbNode = new classDeclaration(n0, n1, n2, n3, n7, n8, n9, n10); }
  { return jtbNode; }
}

className className() :
{
  Token n0 = null;
  className jtbNode = null;
  char b, e;
  Token t = null;
}
{
  n0 = < ID >
  { t = n0; }
  {
    b = '\b';
  }
  { jtbNode = new className(n0); }
  { return jtbNode; }
}

method method() :
{
  methodName n0 = null;
  Token n1 = null;
  NodeList n2 = new NodeList();
  instruction n3 = null;
  Token n4 = null;
  method jtbNode = null;
}
{
  n0 = methodName()
  n1 = "("
  (
    n3 = instruction()
    { n2.addNode(n3); }
  )+
  { n2.nodes.trimToSize(); }
  n4 = ")"
  { jtbNode = new method(n0, n1, n2, n4); }
  { return jtbNode; }
}

methodName methodName() :
{
  Token n0 = null;
  methodName jtbNode = null;
}
{
  n0 = < ID >
  { jtbNode = new methodName(n0); }
  { return jtbNode; }
}

instruction instruction() :
{
  NodeChoice n0 = null;
  NodeSequence n1 = null;
  Token n2 = null;
  Token n3 = null;
  Token n4 = null;
  instruction jtbNode = null;
}
{
  (
    LOOKAHEAD( 2 )
    { n1 = new NodeSequence(2); }
    n2 = < ID >
    { n1.addNode(n2); }
    n3 = ";"
    { n1.addNode(n3); }
    { n0 = new NodeChoice(n1, 0, 2); }
  |
    bp_al()
    n4 = ","
    { n0 = new NodeChoice(n4, 1, 2); }
  )
  { jtbNode = new instruction(n0); }
  { return jtbNode; }
}

TOKEN :
{
  < A_BS_B : "a\bb" >
| < ES : "\u00e9\u00e8\u00ea" >
| < SYN_ESC : "\u0016\u001b" >
| < ID : ( ["a"-"z", "A"-"Z", "0"-"9"] )+ >
}

SKIP :
{
  < WS : 
    (
      " "
    | "\t"
    | "\n"
    | "\r"
    ) >
}

ArrayList<Float> bp_al () /*!*/ :
{
  ArrayList<Float> al = new ArrayList<>();
  java.util.ArrayList<Float> jual = null;
}
{
  < ID > {
    al.add(-23.E-40F);
    jual = new java.util.ArrayList<>(al);
    jual.add(.12e+30F);
    return jual;
  }
}

bp_jual bp_jual() :
{
  Token n0 = null;
  bp_jual jtbNode = null;
  ArrayList<Float> al = new ArrayList<>();
  java.util.ArrayList<Float> jual = null;
}
{
  n0 = < ID >
  { jtbNode = new bp_jual(n0); }
  {
    al.add(-23.E-40F);
    jual = new java.util.ArrayList<>(al);
    jual.add(.12e+30F);
    jtbrt_bp_jual = jual;
  }
  { return jtbNode; }
}

bp_hm bp_hm(final java.util.ArrayList<Float> jual) :
{
  Token n0 = null;
  bp_hm jtbNode = null;
  java.util.HashMap<String , Float> hm = new java.util.HashMap<>();
}
{
  n0 = < ID >
  { jtbNode = new bp_hm(n0); }
  {
    hm.put("nine", jual == null ? 9.9F : jual.get(9));
    jtbrt_bp_hm = hm;
  }
  { return jtbNode; }
}

JAVACODE jc_0 jc_0() /*%*/ 
{
  int i = 0;jtbrt_jc_0 = i;
  return new jc_0();
}

