/* Generated by JTB 1.5.1 */
package grammars.tcf.syntaxtree;

import grammars.tcf.Token;
import grammars.tcf.visitor.IVoidVisitor;


/**
 * JTB node class for the production Tcf1:<br>
 * Corresponding grammar:<br>
 * f0 -> Identifier()<br>
 * f1 -> f2 -> ( %0 Identifier()<br>
 * .. .. .. .. | %1 Integer_literal_boum() )*<br>
 * f3 -> "."<br>
 * s: -1841305487<br>
 */
public class Tcf1 implements INode {

  /** Child node 0 */
  public Identifier f0;

  /** Child node 1 */
  public NodeListOptional f1;

  /** Child node 2 */
  public Tcf3 f2;

  /** Child node 3 */
  public Token f3;

  /** The serial version UID */
  private static final long serialVersionUID = 151L;

  /**
   * Constructs the node with all its children nodes.
   *
   * @param n0 - first child node
   * @param n1 - next child node
   * @param n2 - next child node
   * @param n3 - next child node
   */
  public Tcf1(final Identifier n0, final NodeListOptional n1, final Tcf3 n2, final Token n3) {
    f0 = n0;
    f1 = n1;
    f2 = n2;
    f3 = n3;
  }
  /*
   * Visitors accept methods (no -novis option, visitors specification : Void,void,None)
   */

  /**
   * Accepts a {@link IVoidVisitor} visitor} visitor with user return data.
   *
   * @param vis - the visitor
   */
  @Override
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }


}
