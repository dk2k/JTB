/* Generated by JTB 1.5.1 */
package grammars.tcf.syntaxtree;

import grammars.tcf.visitor.IVoidVisitor;


/**
 * JTB node class for the production Start:<br>
 * Corresponding grammar:<br>
 * f0 -> . %0 #0 Tcf1() #1 < EOF ><br>
 * .. .. | %1 :0 bp_iv1()<br>
 * .. .. . .. :1 bp_iv2()<br>
 * .. .. . ..   :2 . &0 bp_iv3()<br>
 * .. .. . .. .. | &1 bp_iv3_()<br>
 * .. .. . ..   :3 . &0 bp_iv3()<br>
 * .. .. . .. .. | &1 {}<br>
 * .. .. . .. :4 $0 bp_iv4() $1 bp_iv5()<br>
 * .. .. . ..   :5 . &0 $0 bp_iv6() $1 bp_iv7()<br>
 * .. .. . .. .. | &1 {}<br>
 * .. .. . .. #6 < EOF ><br>
 * s: 1737026419<br>
 */
public class Start implements INode {

  /** Child node 0 */
  public NodeChoice f0;

  /** The serial version UID */
  private static final long serialVersionUID = 151L;

  /**
   * Constructs the node with its child node.
   *
   * @param n0 - the child node
   */
  public Start(final NodeChoice n0) {
    f0 = n0;
  }
  /*
   * Visitors accept methods (no -novis option, visitors specification : Void,void,None)
   */

  /**
   * Accepts a {@link IVoidVisitor} visitor} visitor with user return data.
   *
   * @param vis - the visitor
   */
  @Override
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }


}
