/* Generated by JTB 1.x.y from visitor/IVoidVisitorTest.ftl */
package EDU.purdue.jtb.parser.visitor;

import EDU.purdue.jtb.parser.Token;
import EDU.purdue.jtb.parser.syntaxtree.*;

/**
 * All "Void" visitors must implement this interface.
 */
public interface IVoidVisitorTest {

  /*
   * Base "Void" visit methods
   */
   
  /**
   * Visits a {@link NodeChoice} node.
   *
   * @param n - the node to visit
   */
  public void visit(final NodeChoice n);

  /**
   * Visits a {@link NodeList} node.
   *
   * @param n - the node to visit
   */
  public void visit(final NodeList n);

  /**
   * Visits a {@link Token} node.
   *
   * @param n - the node to visit
   */
  public void visit(final Token n);


  /*
   * User's grammar generated visit methods
   */

  /**
   * Visits a {@link CompilationUnit} node, whose children are the following :
   * <p>
   * f0 -> ( %0 < IDENTIFIER ><br>
   * .. .. | %1 "LOOKAHEAD"<br>
   * f1 -> "="<br>
   *
   * @param n - the node to visit
   */
  public void visit(final CompilationUnit n);

  /**
   * Visits a {@link Expression} node, whose children are the following :
   * <p>
   * f0 -> [ #0 "options" #1 "{"<br>
   * .. .. . #2 ( OptionBinding() )*<br>
   *
   * @param n - the node to visit
   */
  public void visit(final Expression n);

  /**
   * Visits a {@link IdentifierAsString} node, whose children are the following :
   * <p>
   * f0 -> JavaCCOptions()<br>
   * f1 -> "PARSER_BEGIN"<br>
   * f1 -> "="<br>
   *
   * @param n - the node to visit
   */
  public void visit(final IdentifierAsString n);

}